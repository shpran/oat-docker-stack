version: '3.8'

services:
    php:
        restart: unless-stopped
        container_name: ${CONTAINER_PREFIX:?must be specified}_php
        build:
            context: ./services/php/fpm
            args:
                PROJECT_NAME: ${PROJECT_NAME:?must be specified}
                GITHUB_USER: ${GITHUB_USER}
                GITHUB_TOKEN: ${GITHUB_TOKEN:?must be specified}
                GITHUB_EMAIL: ${GITHUB_EMAIL}
                GITHUB_NAME: ${GITHUB_NAME}
                NPM_TOKEN: ${NPM_TOKEN:?must be specified}
        expose:
            - '9000'
        volumes:
            - ./services/php/fpm/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./app:/var/www/${PROJECT_NAME:?must be specified}
            - ./services/composer/cache:/home/www-data/.composer/cache
        environment:
            - PHP_IDE_CONFIG=serverName=${PROJECT_NAME:?must be specified}
            - TIMEZONE=${TIMEZONE:-Europe/Luxembourg}
            - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST:-127.0.0.1}
            - COMPOSER_AUTH={"github-oauth":{"github.com":"${GITHUB_TOKEN:?must be specified}"}}
            - DEFAULT_NODE_VERSION=${DEFAULT_NODE_VERSION:-10.24.1}
        networks:
            - default
            - oat-docker-stack

    nginx:
        restart: unless-stopped
        container_name: ${CONTAINER_PREFIX:?must be specified}_nginx
        image: nginx:1.21.6-alpine
        ports:
            - '${NGINX_PORT:-10080}:80'
            - '${NGINX_SSL_PORT:-10443}:443'
        env_file:
            - .env
        volumes:
            - ./services/nginx:/etc/nginx/templates
            - ./services/ssl:/etc/ssl
            - ./app:/var/www/${PROJECT_NAME:?must be specified}
        environment:
            - PROJECT_NAME=${PROJECT_NAME:?must be specified}
            - PATH_TO_ROOT=${PATH_TO_ROOT:-}
        networks:
            - default
            - oat-docker-stack

    mysql:
        restart: unless-stopped
        container_name: ${CONTAINER_PREFIX:?must be specified}_mysql
        image: mysql:8.0.28
        ports:
            - '${MYSQL_PORT:-13306}:3306'
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
            - MYSQL_USER=${MYSQL_USER:-dev}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD:-dev}
            - MYSQL_DATABASE=${MYSQL_DATABASE:-dev}
        volumes:
            - ./services/mysql/config/my.cnf:/etc/mysql/conf.d/my.cnf
            - ./services/mysql/data:/var/lib/mysql
        networks:
            - default
            - oat-docker-stack

    pgsql:
        restart: unless-stopped
        container_name: ${CONTAINER_PREFIX:?must be specified}_pgsql
        image: postgres:14.2-alpine
        ports:
            - '${POSTGRES_PORT:-15432}:5432'
        environment:
            - PGDATA=/var/lib/postgresql/db/pgdata
            - POSTGRES_USER=${POSTGRES_USER:-dev}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev}
            - POSTGRES_DB=${POSTGRES_DB:-dev}
        volumes:
            - ./services/pgsql/data:/var/lib/postgresql/db/data
        networks:
            - default
            - oat-docker-stack

    redis:
        restart: unless-stopped
        container_name: ${CONTAINER_PREFIX:?must be specified}_redis
        image: redis:6.2.6-alpine
        expose:
            - '6379'
        volumes:
            - ./app:/var/www/${PROJECT_NAME:?must be specified}
            - ./services/redis/data:/data
            - ./services/redis/config/redis.conf:/usr/local/etc/redis/redis.conf
        command: redis-server /usr/local/etc/redis/redis.conf
        networks:
            - default
            - oat-docker-stack

    opensearch:
        container_name: ${CONTAINER_PREFIX:?must be specified}_opensearch
        image: opensearchproject/opensearch:1.2.4
        expose:
            - '9200'
        environment:
            - DISABLE_INSTALL_DEMO_CONFIG=true
            - DISABLE_SECURITY_PLUGIN=true
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
        volumes:
            - ./services/opensearch/data:/usr/share/opensearch/data
        networks:
            - default
            - oat-docker-stack

    blackfire:
        container_name: ${CONTAINER_PREFIX:?must be specified}_blackfire
        image: blackfire/blackfire:2.5.2
        environment:
            - BLACKFIRE_LOG_LEVEL=${BLACKFIRE_LOG_LEVEL:-}
            - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID:-}
            - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN:-}
            - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID:-}
            - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN:-}
        external_links:
            - nginx:${PROJECT_NAME:?must be specified}.docker.loc
        expose:
            - '8307'
        networks:
            - default

networks:
    default:
        driver: bridge
        name: ${PROJECT_NAME:?must be specified}
    oat-docker-stack:
        external: true
